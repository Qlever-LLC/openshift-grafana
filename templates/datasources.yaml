{{/* vim: set ft=helm : */}}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/grafana.integreatly.org/grafanadatasource_v1beta1.json
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: {{ include "openshift-grafana.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openshift-grafana.labels" . | nindent 4 }}
spec:
  valuesFrom:
    - targetPath: "secureJsonData.tlsCACert"
      valueFrom:
        configMapKeyRef:
          key: service-ca.crt
          name: openshift-service-ca.crt
    - targetPath: "secureJsonData.httpHeaderValue1"
      valueFrom:
        secretKeyRef:
          key: token
          name: {{ include "openshift-grafana.fullname" . }}-client-secret
  datasource:
    isDefault: true
    editable: false
    jsonData:
      timeInterval: 5s
      {{/*
        FIXME: Figure out auth delagation for thanos querier
      */}}
      #oauthPassThru: true
      tlsSkipVerify: true
      tlsAuthWithCACert: true
      httpHeaderName1: Authorization
    secureJsonData:
      tlsCACert: ${service-ca.crt}
      httpHeaderValue1: "Bearer ${token}"
    access: proxy
    name: Prometheus metrics
    type: prometheus
    {{ with .Values.prometheus -}}
    url: "https://{{ .name }}.{{ .namespace }}.svc.cluster.local:{{ .port }}/"
    {{- end }}
  instanceSelector:
    matchLabels:
      dashboards: {{ include "openshift-grafana.name" $ }}
---
{{ range $tenant := tuple "audit" "infrastructure" "application" }}
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/grafana.integreatly.org/grafanadatasource_v1beta1.json
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: {{ include "openshift-grafana.fullname" $ }}-loki-{{ $tenant }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "openshift-grafana.labels" $ | nindent 4 }}
spec:
  valuesFrom:
    - targetPath: "secureJsonData.tlsCACert"
      valueFrom:
        configMapKeyRef:
          key: service-ca.crt
          name: openshift-service-ca.crt
  datasource:
    editable: false
    jsonData:
      timeInterval: 5s
      oauthPassThru: true
      tlsSkipVerify: true
      tlsAuthWithCACert: true
    secureJsonData:
      tlsCACert: ${service-ca.crt}
    access: proxy
    name: Loki {{ $tenant }} logs
    type: loki
    {{ with $.Values.lokistack -}}
    url: "https://{{ .name }}-gateway-http.{{ .namespace }}.svc.cluster.local:{{ .port }}/api/logs/v1/{{ $tenant }}/"
    {{- end }}
  instanceSelector:
    matchLabels:
      dashboards: {{ include "openshift-grafana.name" $ }}
  plugins:
    - name: grafana-clock-panel
      version: 1.3.0
---
{{ end }}